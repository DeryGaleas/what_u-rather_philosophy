import Head from "next/head";
import { useEffect, useState } from "react";
import ChoiceComponent from "~/components/choiceComponent/ChoiceComponent";
import ConfettiExplosion from 'react-confetti-explosion';

import { api } from "~/utils/api";

interface choiceType{
  id: number;
  questionId: number | null;
  choice: string;
}

interface questionType{
    id: number;
    question: string;
    choices: choiceType[] 
}

export default function Home() {
  const [pointer, setPointer] = useState(0);
  const [questions, setQuestions] = useState<questionType[]>();
  const [isExploading, setIsExploading] = useState<boolean>(false)

  const {data, isLoading} = api.question.getQuestionGroup.useQuery();
 
  console.log(data)
    

  const nextQuestion = ()=>{
    setPointer(pointer+1)
    setIsExploading(true)
  }


  useEffect(()=>{
    setQuestions(data)
  },[data])

  if (isLoading){
    return <h1>Loading...</h1>
  }
  return (
    <>

      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
        <main className="flex h-screen  bg-sky-950 justify-center content-center">

          <div className=" w-10/12 space-y-24 pt-14 " >
          <div className="w-12/12 bg-white flex justify-center">
          {isExploading && 
            <ConfettiExplosion
              force={0.8}
              duration={3000}
              particleCount={250}
              width={2000}
              onComplete={()=>(setIsExploading(false))}
            />
          
          }
          
          </div>
          <div className="h-10">
            
           <h2 className="text-center text-white font-bold text-4xl drop-shadow-lg">{questions && questions[pointer]?.question}</h2>
          </div>
          <div className="flex flex-row space-x-12">     
            <ChoiceComponent nextQuestion={nextQuestion} choice={questions? questions[pointer]?.choices[0]?.choice:""}/>
            <ChoiceComponent nextQuestion={nextQuestion} choice={questions? questions[pointer]?.choices[1]?.choice:""}/>
          </div> 
          <div className="flex space-x-10">
            <button className="bg-slate-100" onClick={()=>setPointer(pointer-1)}>Atras</button>
            
          </div> 
          
          </div>
        </main>
      
    </>
  );
}
